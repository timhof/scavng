package controllers;

import static play.modules.pdf.PDF.renderPDF;

import java.io.File;
import java.io.IOException;
import java.util.Collection;

import models.Hunt;
import models.Target;
import models.User;
import play.Play;
import play.modules.pdf.PDF;
import play.modules.pdf.PDF.Options;
import util.MapKeys;
import Helper.QRHelper;

import com.google.zxing.WriterException;

public class Hunts extends UserBaseController {

	public static void index() {

		Collection<Hunt> hunts = Hunt.findAll();
		System.out.println("hunts.size: " + hunts.size());
		render(hunts);

	}

	public static void ownedHunts() {
		User user = MapKeys.User.get(session, new User());

		Collection<Hunt> hunts = Hunt.find("organizer.user = ?", user).fetch();
		System.out.println("hunts.size: " + hunts.size());
		render(hunts);

	}

	public static void detailJSON(Long id) {
		Hunt hunt = Hunt.findById(id);

		// Gson gson = new
		// GsonBuilder().excludeFieldsWithoutExposeAnnotation().create();
		// String json = gson.toJson(client);
		// Logger.info("%s", json);
		// renderJSON(json);
		renderJSON(String.format("{\"id\": \"%s\", \"description\": \"%s\"}",
				hunt.getId(), hunt.getDescription()));
	}

	public static void detail(Long id) {
		Hunt hunt = Hunt.findById(id);
		render(hunt);
	}

	public static void detailPDF(Long id) {
		Hunt hunt = Hunt.findById(id);
		for (Target target : hunt.getTargets()) {
			try {
				QRHelper.getQRImage(target);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (WriterException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		Options options = new Options();
		options.FOOTER = "<span style='font-size: 8pt;font-style:italic;color: #666;'>Generated by Scavenger</span><span style=\" color: rgb(141, 172, 38);float: right;font-size: 8pt;\">Page <pagenumber>/<pagecount></span>";
		options.filename = "target_" + id + ".pdf";

		PDF.MultiPDFDocuments docs = new PDF.MultiPDFDocuments(options.filename);
		docs.add("pdf/cover.html", null, hunt);
		for (Target target : hunt.getTargets()) {
			docs.add("pdf/target.html", null, target);
		}
		renderPDF(docs);
		// render(hunt);
	}

	public static void generateQRCode(Target target) {

		String filePath = "public/images/qr_codes/qr_" + target.getId()
				+ ".png";
		File file = Play.getFile(filePath);

		// write the image to the output stream
		renderBinary(file);
	}

}